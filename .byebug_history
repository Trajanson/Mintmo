c
quit
current_user.accounts.include?(result.account)
current_user.accounts.include?(transaction.account)
current_user.accounts
current_user
result.user
result.user_id
result
cfinish
c
@account.id
c
@account.id
c
@account.id
c
@account.id
c
@account.id
c
@account.id
c
@account
c
quit
finish
done
c
transaction.account
c
next
end
c
@account.transactions.length
@account.id
@account
n
@account.transactions.first.account
@account.transactions.first.account.account_type
@account.transactions.account
@account.account_type
@account.transactions
@account.transactions.where(account_id: @account.id).length
@account.transactions.length
@account.transactions
@account.id
c
@account
Transaction.find_each { |record| record.update_pg_search_document }
PgSearch::Document.delete_all(:searchable_type => "Transaction")
PgSearch::Document.delete_all(:searchable_type => "Ingredient")
PgSearch::Document(Transaction)
PgSearch::Document(:searchable_type => "Transactions")
PgSearch::Document.
PgSearch::Document.all
PgSearch
PgSearch.all
PgSearch::Document.all
PgSearch::Document
PgSearch::Document.
PgSearch::Document.delete_all(:searchable_type => "Transactions").where(account_id: @account.id)
PgSearch::Document.delete_all(:searchable_type => "Transaction").where(account_id: @account.id)
PgSearch::Document.delete_all(account_id: @account.id)
@account
quit
qiut
y
'quit
end
c
amount + amount 
amount
quit
transactions[0].amount
transactions
balance.round(2)
balance
quit
c
Faker::Date.backward(rand(1000))
Faker::Date.backward(rand(100))
((rand(10000)/100.23) - 50).round(2)
(rand(10000)/100.23) - 50)
(rand(10000)/100.23) - 50).round(2)
(rand(10000)/100.23) - 50
(rand(10000)/100) - 50
(rand(10000)/100.23) - 50
(rand(10000)/100) - 50
amount
c
auth_hash.info.name.gsub(" ", ".").downcase + "@facebook.com"
auth_hash.info.name.gsub(" ", ".") + "@facebook.com".downcase
auth_hash.info.name.gsub(" ", ".") + "@facebook.com"
auth_hash.info.name.gsub(" ", ".")
auth_hash.info.name.gsub(" ", "")
auth_hash.info.name.split(" ").last
auth_hash.info.name.split(" ").first
auth_hash.info.name
auth_hash.info
auth_hash.provider
c
@user
c
auth_hash[:info]
auth_hash[;info
auth_hash
avatar
c
Account.find(params[:id])
params
c
self.account
self.account_id
self
self.account.id
self.account
self.institution
self
this
c
render :show
c
params
c
@user
c
@user
c
params
c
current_user.accounts
Account.all
c
quit
Account.all
Acocunt.all
